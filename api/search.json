[{"id":"8c17d3487aed17c3a795749d1b71c388","title":"碎碎念的emo情绪","content":"","slug":"emo-time","date":"2024-04-27T16:00:00.000Z","categories_index":"Emo","tags_index":"emo","author_index":"RaphaelNY"},{"id":"3b9e33d00820bf2a8cfa74fde48d213b","title":"tauri个人入门建议","content":"前言\n\n\n\n\n\nTIP\n✨如果你没有接触过相关的前端内容（简单理解为就是你放这么多东西在这我也不知道这些前端怎么玩😤）。我强烈建议你通过官方文档中的自主构建而不是使用$cargo cteate-tauri-app来进行入门🦀（博主在最开始的时候尝试了它。它会一次性为你提供整个完整的代码框架，主要在于前端框架🤔但是假如你希望边学边做，我还是建议从自建开始😎毕竟一下子接触一大堆的代码，学习曲线真的很高🥲）\n\n安装tauri无论你希望如何开始你的工作。tauri依赖是必须安装的。你可以直接ctrl+R打开cmd。输入：\n1cargo install tauri-cli\n\n安装时间比较长，你可能要稍等一下。注意你的杀毒软件。博主在安装的时候就碰到杀毒软件杀死安装过程中装入的一些依赖（我使用的是迈克菲😡体验真的有点烂了。添加白名单怎么也加不进去，而且不能直接复制路径来快速移动到想要的路径😤），被狠狠的恶心到了。\n\n\n\n\n\n\nTIP\n在所有的工作之前，你必须安装rust和一些相关的内容，这些请参考一些其他的文章，比如安装 Rust 环境 - Rust语言圣经(Rust Course)\n\n\n新建文件夹✨假如你是github的常客。我的建议是在github上创建项目。添加README和LICENSE（不会有人不喜欢为自己的项目添加README吧😺）然后直接通过git clone到本地。接下来在项目路径下打开终端\n12mkdir uicargo tauri init\n\n\n您应用的名字是什么？这将会是您打包后和操作系统会调用的应用名称。 您可以在此处填写任何您想要的名称。\n\n窗口标题叫什么？这将会是您主窗口的默认标题。 您可以在此处填写任何您想要的名称。\n\n前端页面资源 (HTML&#x2F;CSS&#x2F;JS) 相对于 &lt;current dir&gt;/src-tauri/tauri.conf.json 文件将被创建的位置？\n这是环境时tauri加载web前端资源的目录（使用..&#x2F;ui)\n\n开发环境时的加载路径?\n可以是一个网络地址也可以是一个文件路径（使用..&#x2F;ui）\n\n你将使用什么命令来开发前端页面？\n这是启动前端开发服务器的命令(我建议留空)\n\n你将使用什么命令来构建前端页面？\n这是构建前端文件的命令（我建议留空）\n\n\n然后在ui目录下面新建一个简单的index.html文件\n1234567891011&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;  &lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot; /&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;    &lt;title&gt;文档&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;h1&gt;这是来自 Tauri 的欢迎！&lt;/h1&gt;  &lt;/body&gt;&lt;/html&gt;\n\n✨到此，你就完成了所有基础安装。可以开始你的构筑了。\n\n\n\n\n\n\nTIP\n也许在这之前你应该运行这两段代码\n12cargo tauri buildcargo tauri dev\n\n在你的项目目录下。第一次编译的时间会比较长\n假如你运行的时候产生报错了，那种很奇怪的报错。我推荐检查一下tauri.conf.json中的build字段中这两个字段是否为空。\n12345678&#123;&quot;build&quot;: &#123;\t&quot;beforeBuildCommand&quot;: &quot;&quot;,\t&quot;beforeDevCommand&quot;: &quot;&quot;，\t...\t&#125;,...&#125;\n\n个人感觉，如果你习惯使用cargo进行包管理，这样做是最方便的😺。\n\n\n✨当然，你也可以直接使用$cargo cteate-tauri-app来开始你的工作，这种方式更加简单快捷，相当于直接下载模板框架\n✨到此，你应该能够完成tauri的初步安装。通过$cargo tauri dev打开你所安装的模板程序😎\n🤔如果你出现了什么奇怪的问题也可以跟我分享🤔\n","slug":"tauri-start-tutorial","date":"2024-04-27T12:25:49.000Z","categories_index":"Rust,tauri","tags_index":"rust,tauri","author_index":"RaphaelNY"},{"id":"cb74cf4ec6063240bdd2492df0bbdf14","title":"Rust desktop application","content":"Rust Desktop Application Development Practice在这一篇中准备记录一下本此次项目从选择到构筑实现的各种心路历程。而具体遇到的问题和注意应该会单独开一篇来记录。\n\norigin这两天看到了这个视频📺，关于使用tauri+后端Rust🦀+数据库SurrealDB实现的一个桌面应用。\n恰好最近正在学习rsut🦀和数据库的相关知识，所以想要制作一个类似的✨桌面应用。前端使用什么还没有确定下来🤔。后端和数据库准备使用Rust🦀和SurrealDB。接下来准备开这个坑😎😎\n\n\n\n\n\n\nTIP\n✨[使用Rust、Tauri和SurrealDB构建令人惊叹的桌面应用程序]中字\n\ndate: 2024-04-26\n\nbuild a tauri app✨经过讨论，我们最终决定使用tauri来作为我们的工具进行我们的app构筑😎\n✨也许我们的前端选择非常愚蠢。但是我们希望我们的前端ui能够实现我们的一些异想天开🧠\n✨最终选择最为基础的使用HTML、CSS、JavaScript来作为我们的前端语言实现🤔 \nproject introduce\n项目名：Lumijade\n本次项目将由我们组织**VernunftIstWirklich** 中的三个人共同开发💕\n\n—- 待续 —-\ndate: 2024-04-27\n","slug":"Rust-desktop-application","date":"2024-04-26T15:07:08.000Z","categories_index":"Rust,tauri","tags_index":"rust,SurrealDB,tauri","author_index":"RaphaelNY"},{"id":"f8b5cac907ef39197862c4a0ab4ae287","title":"Welcome to my blog","content":"welcome to my blog希望每一位到来的访客都能够学习到，或者了解到有趣的东西😎😎\n我也会尽我所能的更新有趣的内容！😊😊\n当然，你也可以在本篇文章的评论中提出批评建议😣。或者你希望我去学习了解什么内容🤔\n当然，由于是学生的问题🧑‍🎓，我的更新是不定期的哟😘\n","slug":"Welcome-to-my-blog","date":"2024-04-26T03:23:27.000Z","categories_index":"announcement","tags_index":"announcement","author_index":"RaphaelNY"}]