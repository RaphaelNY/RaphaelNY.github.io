{"title":"Solana escrow合约 编程学习","uid":"52d0fe63d1c1ad7c08273efe980dc2ed","slug":"Solana-coding-learning","date":"2024-09-01T14:56:16.000Z","updated":"2024-09-02T06:57:59.421Z","comments":true,"path":"api/articles/Solana-coding-learning.json","keywords":null,"cover":"/img/Solana-coding-learning-cover.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>苦于solana入门门槛，对于博主这样的区块链小白而言，确实有些幸苦😭。所以，经过查询，找到了一篇简单的入门教程📖。</p>\n<p>同时，这是本次学习的<a href=\"https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/\">源文章</a></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>如果你对於区块链没有任何知识，或者说你完全没了解solana，你也许可以先考虑以下video和文档</p>\n<ol>\n<li>📺<a href=\"https://www.bilibili.com/video/BV1h54y1u7RY/?spm_id_from=333.788.recommend_more_video.0&vd_source=63572e2cc5e7fe87e67360da18893d03\">【Solana开发课】学习使用Rust+JavaScript进行Solana区块链开发 | 掌握 Web3、DApp、NFT、DeFi等产品开发 | 中文字幕</a></li>\n<li>📖<a href=\"https://www.solana-cn.com/SolanaDocumention/intro/overview.html\">介绍 | Solana中文大全 (solana-cn.com)</a></li>\n<li>📖<a href=\"https://docs.solanalabs.com/\">Home | Solana Validator (solanalabs.com)</a></li>\n<li>📖<a href=\"https://solana.com/zh/docs\">Solana Documentation | Solana</a></li>\n<li><a href=\"https://learnblockchain.cn/article/8154\">Solana 智能合约指南 | 登链社区 | 区块链技术社区 (learnblockchain.cn)</a></li>\n</ol>\n<p>这边建议使用②的文档，有一说一④的zh翻译真的是翻一半😤我还是倾向于看人话翻译出来的</p>\n\n</div>\n<h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><p>安装Solana-cil。我还是推荐使用⚙️Cargo来进行包管理，而不是使用其他途径进行安装🤗装不了建议换网</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo install solana-cli --locked --version 1.9.1</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意你的⚙️rust最好使用最新的版本，solana-cil的版本也建议使用最新的，详细可以参考<a href=\"https://crate.io/\">crate.io</a><a href=\"%E4%B9%9F%E8%AE%B8%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%B8%8D%E7%94%A8%E7%89%B9%E5%9C%B0%E5%AE%89%E8%A3%85solana-cil%F0%9F%A4%94%E9%80%9A%E8%BF%87%60cargo.toml%60%E5%8F%AF%E4%BB%A5%E5%BE%88%E8%BD%BB%E6%9D%BE%E7%9A%84%E5%AF%BC%E5%85%A5solana.cil%EF%BC%8C%E4%BD%A0%E4%BD%BF%E7%94%A8vscode%E6%88%96%E8%80%85RustRover%E9%83%BD%E4%BC%9A%E8%87%AA%E5%8A%A8%E4%B8%8B%E8%BD%BD%EF%BC%8C%E5%81%87%E5%A6%82%E6%88%91%E5%90%8E%E9%9D%A2%E5%8F%91%E7%8E%B0%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%EF%BC%8C%E6%88%91%E4%BC%9A%E6%9D%A5%E6%9B%B4%E6%AD%A3%E8%BF%99%E6%AE%B5%E6%B3%A8%E9%87%8A\">^1</a>。</li>\n</ul>\n<h2 id=\"项目创建\"><a href=\"#项目创建\" class=\"headerlink\" title=\"项目创建\"></a>项目创建</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo new escrow --lib</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><p>注意，下述文件除了.toml文件，其余都在.&#x2F;src&#x2F;目录下</p>\n</p>\n</div>\n<figure class=\"highlight toml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Xargo.toml // 文件名</span><br><span class=\"line\"><span class=\"section\">[target.bpfel-unknown.dependencies.std]</span></span><br><span class=\"line\"><span class=\"attr\">features</span> = []</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight toml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cargo.toml</span><br><span class=\"line\"><span class=\"section\">[package]</span></span><br><span class=\"line\"><span class=\"attr\">name</span> = <span class=\"string\">&quot;escrow&quot;</span></span><br><span class=\"line\"><span class=\"attr\">version</span> = <span class=\"string\">&quot;0.1.0&quot;</span></span><br><span class=\"line\"><span class=\"attr\">edition</span> = <span class=\"string\">&quot;2021&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[features]</span></span><br><span class=\"line\"><span class=\"attr\">no-entrypoint</span> = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[dependencies]</span></span><br><span class=\"line\"><span class=\"attr\">arrayref</span> = <span class=\"string\">&quot;0.3.6&quot;</span></span><br><span class=\"line\"><span class=\"attr\">solana-program</span> = <span class=\"string\">&quot;2.0.8&quot;</span></span><br><span class=\"line\"><span class=\"attr\">thiserror</span> = <span class=\"string\">&quot;1.0&quot;</span></span><br><span class=\"line\"><span class=\"attr\">spl-token</span> = &#123;version = <span class=\"string\">&quot;6.0.0&quot;</span>, features = [<span class=\"string\">&quot;no-entrypoint&quot;</span>]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[lib]</span></span><br><span class=\"line\"><span class=\"attr\">crate-type</span> = [<span class=\"string\">&quot;cdylib&quot;</span>, <span class=\"string\">&quot;lib&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>第一个项目要学习的是一个托管合约，主要是解决交易中的去信任问题。</li>\n<li>在区块链中，智能合约双方均可见，属于天然的可信第三方👮‍♂️。</li>\n<li>不过，理论是理论🤗solana并不完全适用，因为solana合约是可以升级的，有可能你看到的不一定是被部署的，不过这都不重要🤔我们暂时涉及不到那个部分</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>基于我个人的理解，智能合约就是承担一笔交易的第三方担保，用来保证一场交易中不会产生交易双方由于无法信任对方或者缺少可信任的第三方导致交易无法正常进行。打个不恰当的比喻，有点像是通过<code>支付宝 || 微信</code>进行的交易，大家都能够完全的信任，就是因为他们在我们的交易中提供了资金交流的保证。</p></blockquote>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>在Solana区块链中，智能合约是无状态的，不能保存任何数据。所有需要保存的数据均保存在账号的<code>data</code>字段中。</p>\n<p>关于Spl-token及账号相关的一些基础知识请读者自行阅读相应文章或者源教学文章。</p>\n\n</div>\n<ul>\n<li>在src目录下创建<code>error.rs</code> ,<code>instruction.rs</code>, <code>processor.rs</code>,<code>entrypoint.rs</code>,<code>state.rs</code>稍后我们将在这些文件中撰写代码</li>\n</ul>\n<h2 id=\"编写基本框架\"><a href=\"#编写基本框架\" class=\"headerlink\" title=\"编写基本框架\"></a>编写基本框架</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>下面会先放源码，再放我的个人理解，只想看代码的可以通过大纲进行跳转。</p></blockquote>\n<h3 id=\"Error-rs\"><a href=\"#Error-rs\" class=\"headerlink\" title=\"Error.rs\"></a>Error.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> thiserror::Error;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_program::program_error::ProgramError;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#[derive(Error,Debug,Copy,Clone)]</span></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">EscrowError</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Invalid instruction</span></span><br><span class=\"line\">    <span class=\"meta\">#[error(<span class=\"string\">&quot;Invalid Instruction&quot;</span>)]</span></span><br><span class=\"line\">    InvalidInstruction,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">From</span>&lt;EscrowError&gt; <span class=\"keyword\">for</span> <span class=\"title class_\">ProgramError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">from</span>(e: EscrowError) <span class=\"punctuation\">-&gt;</span> <span class=\"keyword\">Self</span> &#123;</span><br><span class=\"line\">        ProgramError::<span class=\"title function_ invoke__\">Custom</span>(e <span class=\"keyword\">as</span> <span class=\"type\">u32</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里使用<code>thiserror</code>的原因原文中写的很明确，省去我们手动实现相关<em>Trait</em>。</p></blockquote>\n<ul>\n<li>solana程序的返回值通常为<code>ProgramError</code>,所以我们在这里为<code>ProgramError</code>枚举中的所有类型实现<code>From</code>Trait转换为<code>EscrowError</code></li>\n</ul>\n<h3 id=\"instruction-rs\"><a href=\"#instruction-rs\" class=\"headerlink\" title=\"instruction.rs\"></a>instruction.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> std::convert::TryInto;</span><br><span class=\"line\"><span class=\"keyword\">use</span> crate::error::EscrowError::InvalidInstruction;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_program::program_error::ProgramError;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">EscrowInstruction</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/// 因为要在初始化里转移临时代币账号所有权，所以需要原owner签名，并且原owner也是初始化者</span></span><br><span class=\"line\">    <span class=\"comment\">/// 0. `[signer]` The account of the person initializing the escrow</span></span><br><span class=\"line\">    <span class=\"comment\">/// 1. `[writable]` Temporary token account that should be created prior to this instruction and owned by the initializer</span></span><br><span class=\"line\">    <span class=\"comment\">/// 2. `[]` The initializer&#x27;s token account for the token they will receive should the trade go through</span></span><br><span class=\"line\">    <span class=\"comment\">/// 3. `[writable]` The escrow account, it will hold all necessary info about the trade.</span></span><br><span class=\"line\">    <span class=\"comment\">/// 4. `[]` The rent sysvar</span></span><br><span class=\"line\">    <span class=\"comment\">/// 5. `[]` The token program</span></span><br><span class=\"line\">    InitEscrow &#123;</span><br><span class=\"line\">        <span class=\"comment\">/// The amount party A expects to receive of token Y</span></span><br><span class=\"line\">        amount: <span class=\"type\">u64</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">EscrowInstruction</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">unpack</span>(input: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;<span class=\"keyword\">Self</span>, ProgramError&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> (tag, rest) = input.<span class=\"title function_ invoke__\">split_first</span>().<span class=\"title function_ invoke__\">ok_or</span>(InvalidInstruction)?;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(<span class=\"keyword\">match</span> tag &#123;</span><br><span class=\"line\">            <span class=\"number\">0</span> =&gt; <span class=\"keyword\">Self</span>::InitEscrow &#123;</span><br><span class=\"line\">                amount: <span class=\"keyword\">Self</span>::<span class=\"title function_ invoke__\">unpack_amount</span>(rest)?,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">//注意这里的用法，InvalidInstruction转化为ProgramError时，使用了into</span></span><br><span class=\"line\">          \t<span class=\"comment\">//因为我们在error.rs中已经实现了那个from，系统会自动帮我们实现into</span></span><br><span class=\"line\">            _ =&gt; <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(InvalidInstruction.<span class=\"title function_ invoke__\">into</span>()),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//这里学习Input 转化为u64</span></span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">unpack_amount</span>(input: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;<span class=\"type\">u64</span>, ProgramError&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">amount</span> = input</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">get</span>(..<span class=\"number\">8</span>)</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">and_then</span>(|slice| slice.<span class=\"title function_ invoke__\">try_into</span>().<span class=\"title function_ invoke__\">ok</span>())</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">map</span>(<span class=\"type\">u64</span>::from_le_bytes)</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">ok_or</span>(InvalidInstruction)?;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(amount)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>在这段代码里准备一份初始化指令，编写<code>unpack</code>函数用来将输入数据解析为一个指令</p>\n</li>\n<li><p>后续添加新的指令继续在<code>unpack</code>函数中添加内容即可。注意函数返回类型<code>Result&lt;Self, ProgramError&gt;</code></p>\n</li>\n<li><p>由于input是<code>&amp;[u8]</code>类型，我们在初始化代币所有权中使用了<code>amount: u64</code>,所以我们需要编写一个类型转换，从input中切取代表<code>amount</code>的部分。</p>\n<ul>\n<li>整个过程的目的是尝试从 <code>input</code> 的前 8 个字节中读取一个 <code>u64</code> 值：<ol>\n<li><strong>获取前 8 个字节</strong>：通过 <code>input.get(..8)</code> 尝试获取切片的前 8 个字节。</li>\n<li><strong>转换切片到数组</strong>：使用 <code>.and_then</code> 和 <code>try_into()</code> 将字节切片转换为一个固定大小的字节数组 <code>[u8; 8]</code>。</li>\n<li>**转换字节数组到 <code>u64</code>**：使用 <code>map(u64::from_le_bytes)</code> 将 <code>[u8; 8]</code> 转换为 <code>u64</code>。</li>\n<li><strong>错误处理</strong>：如果任何一步失败，返回 <code>InvalidInstruction</code> 错误。</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"processor-rs\"><a href=\"#processor-rs\" class=\"headerlink\" title=\"processor.rs\"></a>processor.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> solana_program::&#123;</span><br><span class=\"line\">    account_info::&#123;next_account_info,AccountInfo&#125;,</span><br><span class=\"line\">    entrypoint::ProgramResult,</span><br><span class=\"line\">    program_error::ProgramError,</span><br><span class=\"line\">    msg,</span><br><span class=\"line\">    pubkey::Pubkey,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">use</span> crate::instruction::EscrowInstruction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">Processor</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">Processor</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">process</span>(program_id: &amp;Pubkey, accounts: &amp;[AccountInfo], instruction_data: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">instruction</span> = EscrowInstruction::<span class=\"title function_ invoke__\">unpack</span>(instruction_data)?;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">match</span> instruction &#123;</span><br><span class=\"line\">            EscrowInstruction::InitEscrow &#123;amount&#125; =&gt; &#123;</span><br><span class=\"line\">                msg!(<span class=\"string\">&quot;Instruction: InitEscrow&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">Self</span>::<span class=\"title function_ invoke__\">process_init_escrow</span>(accounts,amount,program_id)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">process_init_escrow</span>(</span><br><span class=\"line\">        accounts: &amp;[AccountInfo],</span><br><span class=\"line\">        amount: <span class=\"type\">u64</span>,</span><br><span class=\"line\">        program_id: &amp;Pubkey</span><br><span class=\"line\">    ) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">account_info_iter</span> = &amp;<span class=\"keyword\">mut</span> accounts.<span class=\"title function_ invoke__\">iter</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">initializer</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> !initializer.is_signer &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::MissingRequiredSignature);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// todo</span></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(())</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><ul>\n<li>这里一般为固定的<code>Processor</code>结构体（只是约定，无强制力）。在该结构体上创建一个静态函数<code>process</code>来处理入口转发过来的参数。在该函数内部，首先解析指令，然后根据指令调用相应的处理函数。<ul>\n<li><code>processor</code>返回的是<code>ProgramResult</code>。</li>\n<li>函数体中<code>?</code>操作符的使用，向上级调用传递错误。</li>\n</ul>\n</li>\n<li><code>process_init_escrow</code>并没有完全编写🤗后续会进行编写</li>\n</ul>\n</p>\n</div>\n<h3 id=\"entrypoint-rs\"><a href=\"#entrypoint-rs\" class=\"headerlink\" title=\"entrypoint.rs\"></a>entrypoint.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//! Program entrypoint</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> crate::&#123;processor::Processor&#125;;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_program::&#123;</span><br><span class=\"line\">    account_info::AccountInfo, </span><br><span class=\"line\">    entrypoint, </span><br><span class=\"line\">    entrypoint::ProgramResult,</span><br><span class=\"line\">    pubkey::Pubkey,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">entrypoint!(process_instruction);</span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">process_instruction</span>(</span><br><span class=\"line\">    program_id: &amp;Pubkey,</span><br><span class=\"line\">    accounts: &amp;[AccountInfo],</span><br><span class=\"line\">    instruction_data: &amp;[<span class=\"type\">u8</span>],</span><br><span class=\"line\">) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">    Processor::<span class=\"title function_ invoke__\">process</span>(program_id, accounts, instruction_data) </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这部分在<em>lib.rs</em>中声明<code>mod</code>的时候，需要设定可关闭<code>entrypoint</code>特性，为了程序可以方便的被其他程序导入（这里原文中也只是指出了方法，是参考spl-token中的设置和编写而来的）<a href=\"lib.rs%E4%B8%AD%E7%9A%84%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81%E4%BC%9A%E5%9C%A8%E5%90%8E%E9%9D%A2%E7%BB%9F%E4%B8%80%E5%B1%95%E7%A4%BA\">^2</a></li>\n</ul>\n<h3 id=\"state-rs\"><a href=\"#state-rs\" class=\"headerlink\" title=\"state.rs\"></a>state.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> solana_program::&#123;</span><br><span class=\"line\">    program_pack::&#123;IsInitialized, Pack, Sealed&#125;,</span><br><span class=\"line\">    program_error::ProgramError,</span><br><span class=\"line\">    pubkey::Pubkey,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">Escrow</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> is_initialized: <span class=\"type\">bool</span>,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> initializer_pubkey: Pubkey,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> temp_token_account_pubkey: Pubkey,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> initializer_token_to_receive_account_pubkey: Pubkey,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> expected_amount: <span class=\"type\">u64</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">Sealed</span> <span class=\"keyword\">for</span> <span class=\"title class_\">Escrow</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">IsInitialized</span> <span class=\"keyword\">for</span> <span class=\"title class_\">Escrow</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">is_initialized</span>(&amp;<span class=\"keyword\">self</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.is_initialized</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> arrayref::&#123;array_mut_ref, array_ref, array_refs, mut_array_refs&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">Pack</span> <span class=\"keyword\">for</span> <span class=\"title class_\">Escrow</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> LEN: <span class=\"type\">usize</span> = <span class=\"number\">105</span>;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">unpack_from_slice</span>(src: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;<span class=\"keyword\">Self</span>, ProgramError&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">src</span> = array_ref![src, <span class=\"number\">0</span>, Escrow::LEN];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> (</span><br><span class=\"line\">            is_initialized,</span><br><span class=\"line\">            initializer_pubkey,</span><br><span class=\"line\">            temp_token_account_pubkey,</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey,</span><br><span class=\"line\">            expected_amount,</span><br><span class=\"line\">        ) = array_refs![src, <span class=\"number\">1</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">is_initialized</span> = <span class=\"keyword\">match</span> is_initialized &#123;</span><br><span class=\"line\">            [<span class=\"number\">0</span>] =&gt; <span class=\"literal\">false</span>,</span><br><span class=\"line\">            [<span class=\"number\">1</span>] =&gt; <span class=\"literal\">true</span>,</span><br><span class=\"line\">            _ =&gt; <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::InvalidAccountData),</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(Escrow &#123;</span><br><span class=\"line\">            is_initialized,</span><br><span class=\"line\">            initializer_pubkey: Pubkey::<span class=\"title function_ invoke__\">new_from_array</span>(*initializer_pubkey),</span><br><span class=\"line\">            temp_token_account_pubkey: Pubkey::<span class=\"title function_ invoke__\">new_from_array</span>(*temp_token_account_pubkey),</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey: Pubkey::<span class=\"title function_ invoke__\">new_from_array</span>(*initializer_token_to_receive_account_pubkey),</span><br><span class=\"line\">            expected_amount: <span class=\"type\">u64</span>::<span class=\"title function_ invoke__\">from_le_bytes</span>(*expected_amount),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">pack_into_slice</span>(&amp;<span class=\"keyword\">self</span>, dst: &amp;<span class=\"keyword\">mut</span> [<span class=\"type\">u8</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">dst</span> = array_mut_ref![dst, <span class=\"number\">0</span>, Escrow::LEN];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> (</span><br><span class=\"line\">            is_initialized_dst,</span><br><span class=\"line\">            initializer_pubkey_dst,</span><br><span class=\"line\">            temp_token_account_pubkey_dst,</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey_dst,</span><br><span class=\"line\">            expected_amount_dst,</span><br><span class=\"line\">        ) = mut_array_refs![dst, <span class=\"number\">1</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">Escrow</span> &#123;</span><br><span class=\"line\">            is_initialized,</span><br><span class=\"line\">            initializer_pubkey,</span><br><span class=\"line\">            temp_token_account_pubkey,</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey,</span><br><span class=\"line\">            expected_amount,</span><br><span class=\"line\">        &#125; = <span class=\"keyword\">self</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        is_initialized_dst[<span class=\"number\">0</span>] = *is_initialized <span class=\"keyword\">as</span> <span class=\"type\">u8</span>;</span><br><span class=\"line\">        initializer_pubkey_dst.<span class=\"title function_ invoke__\">copy_from_slice</span>(initializer_pubkey.<span class=\"title function_ invoke__\">as_ref</span>());</span><br><span class=\"line\">        temp_token_account_pubkey_dst.<span class=\"title function_ invoke__\">copy_from_slice</span>(temp_token_account_pubkey.<span class=\"title function_ invoke__\">as_ref</span>());</span><br><span class=\"line\">        initializer_token_to_receive_account_pubkey_dst.<span class=\"title function_ invoke__\">copy_from_slice</span>(initializer_token_to_receive_account_pubkey.<span class=\"title function_ invoke__\">as_ref</span>());</span><br><span class=\"line\">        *expected_amount_dst = expected_amount.<span class=\"title function_ invoke__\">to_le_bytes</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<ul>\n<li>相同目录创建<code>state.rs</code>，文件用来定义状态保存对象并编写相应的程序处理序列化和反序列化（也就是将字节数组和数据结构相互转换）</li>\n<li>我们的结构需要实现<code>program_pack::&#123;IsInitialized, Pack, Sealed&#125; </code>这三个特型。</li>\n<li><code>const LEN: usize = 105;</code>这里结构的大小是根据各个字段的大小相加得到的，分别为<code>1 + 32*3 + 8 = 105</code>。</li>\n<li><code>unpack_from_slice</code>与<code>pack_into_slice</code>并不是直接被程序的其它部分调用的，Pack特型有两个默认函数，分别调用这两个函数。</li>\n<li>注意<code>array_mut_ref</code>, <code>array_ref</code>, <code>array_refs</code>, <code>mut_array_refs</code>这几个宏的用法，看名字就能猜到，分别为得到一个数组的可变引用，得到一个数组的引用 ，得到多个数组的引用，得到多个数组的可变引用。</li>\n<li>注意示例中从字节数组得到公钥的方法<code>copy_from_slice</code></li>\n<li>示例中从字节数组得到<code>u64</code>采用了<code>to_le_bytes</code>左对齐的方式，Rust中还有类似的右对齐方式。但一般Solana中采用类C的左对齐方式。</li>\n<li>布尔值可以直接转换为<code>u8</code>，见<code>is_initialized as u8</code>。</li>\n</ul>\n\n</div>\n<h3 id=\"lib-rs\"><a href=\"#lib-rs\" class=\"headerlink\" title=\"lib.rs\"></a>lib.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#[cfg(not(feature = <span class=\"string\">&quot;no-entrypoint&quot;</span>))]</span></span><br><span class=\"line\"><span class=\"keyword\">mod</span> entrypoint;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> error;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> instruction;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> processor;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> state;</span><br></pre></td></tr></table></figure>\n\n","feature":true,"text":"一个简单的学习记录，学习如何构建第一个Solana智能合约...","permalink":"/post/Solana-coding-learning","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Rust","slug":"Rust","count":3,"path":"api/categories/Rust.json"},{"name":"区块链","slug":"Rust/区块链","count":1,"path":"api/categories/Rust/区块链.json"}],"tags":[{"name":"rust","slug":"rust","count":3,"path":"api/tags/rust.json"},{"name":"solana","slug":"solana","count":1,"path":"api/tags/solana.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87\"><span class=\"toc-text\">前期准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">项目创建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">编写基本框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Error-rs\"><span class=\"toc-text\">Error.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#instruction-rs\"><span class=\"toc-text\">instruction.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#processor-rs\"><span class=\"toc-text\">processor.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#entrypoint-rs\"><span class=\"toc-text\">entrypoint.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#state-rs\"><span class=\"toc-text\">state.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lib-rs\"><span class=\"toc-text\">lib.rs</span></a></li></ol></li></ol>","author":{"name":"RaphaelNY","slug":"blog-author","avatar":"img/avatar.png","link":"/","description":"好きなように、自分の願いに従って活動するプログラマー。<br>不定期に面白いものを更新します！","socials":{"github":"https://github.com/RaphaelNY","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fffffff.svg","link":"https://live.bilibili.com/25369205"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"tauri个人入门建议","uid":"3b9e33d00820bf2a8cfa74fde48d213b","slug":"tauri-start-tutorial","date":"2024-04-27T12:25:49.000Z","updated":"2024-05-03T09:00:31.233Z","comments":true,"path":"api/articles/tauri-start-tutorial.json","keywords":null,"cover":"/img/tauri-start-tutorial-cover.png","text":"一个简单的入门tauri，教你如何最快上手tauri+rust && 一些注意事项...","permalink":"/post/tauri-start-tutorial","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Rust","slug":"Rust","count":3,"path":"api/categories/Rust.json"},{"name":"tauri","slug":"Rust/tauri","count":2,"path":"api/categories/Rust/tauri.json"}],"tags":[{"name":"rust","slug":"rust","count":3,"path":"api/tags/rust.json"},{"name":"tauri","slug":"tauri","count":2,"path":"api/tags/tauri.json"}],"author":{"name":"RaphaelNY","slug":"blog-author","avatar":"img/avatar.png","link":"/","description":"好きなように、自分の願いに従って活動するプログラマー。<br>不定期に面白いものを更新します！","socials":{"github":"https://github.com/RaphaelNY","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fffffff.svg","link":"https://live.bilibili.com/25369205"}}}},"feature":true}}