{"title":"Solana escrow合约 编程学习","uid":"52d0fe63d1c1ad7c08273efe980dc2ed","slug":"Solana-coding-learning","date":"2024-09-01T14:56:16.000Z","updated":"2024-09-03T13:03:58.620Z","comments":true,"path":"api/articles/Solana-coding-learning.json","keywords":null,"cover":"/img/Solana-coding-learning-cover.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>苦于solana入门门槛，对于博主这样的区块链小白而言，确实有些幸苦😭。所以，经过查询，找到了一篇简单的入门教程📖。</p>\n<p>同时，这是本次学习的<a href=\"https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/\">源文章</a></p>\n<p>我的相关学习资料会放在我的<a href=\"https://github.com/RaphaelNY/Solana_Rustlearning\">github仓库</a>中</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>如果你对於区块链没有任何知识，或者说你完全没了解solana，你也许可以先考虑以下video和文档</p>\n<ol>\n<li>📺<a href=\"https://www.bilibili.com/video/BV1h54y1u7RY/?spm_id_from=333.788.recommend_more_video.0&vd_source=63572e2cc5e7fe87e67360da18893d03\">【Solana开发课】学习使用Rust+JavaScript进行Solana区块链开发 | 掌握 Web3、DApp、NFT、DeFi等产品开发 | 中文字幕</a></li>\n<li>📖<a href=\"https://www.solana-cn.com/SolanaDocumention/intro/overview.html\">介绍 | Solana中文大全 (solana-cn.com)</a></li>\n<li>📖<a href=\"https://docs.solanalabs.com/\">Home | Solana Validator (solanalabs.com)</a></li>\n<li>📖<a href=\"https://solana.com/zh/docs\">Solana Documentation | Solana</a></li>\n<li><a href=\"https://learnblockchain.cn/article/8154\">Solana 智能合约指南 | 登链社区 | 区块链技术社区 (learnblockchain.cn)</a></li>\n</ol>\n<p>这边建议使用②的文档，有一说一④的zh翻译真的是翻一半😤我还是倾向于看人话翻译出来的</p>\n\n</div>\n<h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><p>安装Solana-cil。我还是推荐使用⚙️Cargo来进行包管理，而不是使用其他途径进行安装🤗装不了建议换网</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo install solana-cli --locked --version 1.9.1</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意你的⚙️rust最好使用最新的版本，solana-cil的版本也建议使用最新的，详细可以参考<a href=\"https://crate.io/\">crate.io</a><a href=\"%E4%B9%9F%E8%AE%B8%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%B8%8D%E7%94%A8%E7%89%B9%E5%9C%B0%E5%AE%89%E8%A3%85solana-cil%F0%9F%A4%94%E9%80%9A%E8%BF%87%60cargo.toml%60%E5%8F%AF%E4%BB%A5%E5%BE%88%E8%BD%BB%E6%9D%BE%E7%9A%84%E5%AF%BC%E5%85%A5solana.cil%EF%BC%8C%E4%BD%A0%E4%BD%BF%E7%94%A8vscode%E6%88%96%E8%80%85RustRover%E9%83%BD%E4%BC%9A%E8%87%AA%E5%8A%A8%E4%B8%8B%E8%BD%BD%EF%BC%8C%E5%81%87%E5%A6%82%E6%88%91%E5%90%8E%E9%9D%A2%E5%8F%91%E7%8E%B0%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%EF%BC%8C%E6%88%91%E4%BC%9A%E6%9D%A5%E6%9B%B4%E6%AD%A3%E8%BF%99%E6%AE%B5%E6%B3%A8%E9%87%8A\">^1</a>。</li>\n</ul>\n<h2 id=\"项目创建\"><a href=\"#项目创建\" class=\"headerlink\" title=\"项目创建\"></a>项目创建</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo new escrow --lib</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><p>注意，下述文件除了.toml文件，其余都在.&#x2F;src&#x2F;目录下</p>\n</p>\n</div>\n<figure class=\"highlight toml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Xargo.toml // 文件名</span><br><span class=\"line\"><span class=\"section\">[target.bpfel-unknown.dependencies.std]</span></span><br><span class=\"line\"><span class=\"attr\">features</span> = []</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight toml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cargo.toml</span><br><span class=\"line\"><span class=\"section\">[package]</span></span><br><span class=\"line\"><span class=\"attr\">name</span> = <span class=\"string\">&quot;escrow&quot;</span></span><br><span class=\"line\"><span class=\"attr\">version</span> = <span class=\"string\">&quot;0.1.0&quot;</span></span><br><span class=\"line\"><span class=\"attr\">edition</span> = <span class=\"string\">&quot;2021&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[features]</span></span><br><span class=\"line\"><span class=\"attr\">no-entrypoint</span> = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[dependencies]</span></span><br><span class=\"line\"><span class=\"attr\">arrayref</span> = <span class=\"string\">&quot;0.3.6&quot;</span></span><br><span class=\"line\"><span class=\"attr\">solana-program</span> = <span class=\"string\">&quot;2.0.8&quot;</span></span><br><span class=\"line\"><span class=\"attr\">thiserror</span> = <span class=\"string\">&quot;1.0&quot;</span></span><br><span class=\"line\"><span class=\"attr\">spl-token</span> = &#123;version = <span class=\"string\">&quot;6.0.0&quot;</span>, features = [<span class=\"string\">&quot;no-entrypoint&quot;</span>]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[lib]</span></span><br><span class=\"line\"><span class=\"attr\">crate-type</span> = [<span class=\"string\">&quot;cdylib&quot;</span>, <span class=\"string\">&quot;lib&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>第一个项目要学习的是一个托管合约，主要是解决交易中的去信任问题。</li>\n<li>在区块链中，智能合约双方均可见，属于天然的可信第三方👮‍♂️。</li>\n<li>不过，理论是理论🤗solana并不完全适用，因为solana合约是可以升级的，有可能你看到的不一定是被部署的，不过这都不重要🤔我们暂时涉及不到那个部分</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>基于我个人的理解，智能合约就是承担一笔交易的第三方担保，用来保证一场交易中不会产生交易双方由于无法信任对方或者缺少可信任的第三方导致交易无法正常进行。打个不恰当的比喻，有点像是通过<code>支付宝 || 微信</code>进行的交易，大家都能够完全的信任，就是因为他们在我们的交易中提供了资金交流的保证。</p></blockquote>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>在Solana区块链中，智能合约是无状态的，不能保存任何数据。所有需要保存的数据均保存在账号的<code>data</code>字段中。</p>\n<p>关于Spl-token及账号相关的一些基础知识请读者自行阅读相应文章或者源教学文章。</p>\n\n</div>\n<ul>\n<li>在src目录下创建<code>error.rs</code> ,<code>instruction.rs</code>, <code>processor.rs</code>,<code>entrypoint.rs</code>,<code>state.rs</code>稍后我们将在这些文件中撰写代码</li>\n</ul>\n<h2 id=\"编写基本框架\"><a href=\"#编写基本框架\" class=\"headerlink\" title=\"编写基本框架\"></a>编写基本框架</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>下面会先放源码，再放我的个人理解，只想看代码的可以通过大纲进行跳转。</p></blockquote>\n<h3 id=\"Error-rs\"><a href=\"#Error-rs\" class=\"headerlink\" title=\"Error.rs\"></a>Error.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> thiserror::Error;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_program::program_error::ProgramError;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#[derive(Error,Debug,Copy,Clone)]</span></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">EscrowError</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Invalid instruction</span></span><br><span class=\"line\">    <span class=\"meta\">#[error(<span class=\"string\">&quot;Invalid Instruction&quot;</span>)]</span></span><br><span class=\"line\">    InvalidInstruction,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">From</span>&lt;EscrowError&gt; <span class=\"keyword\">for</span> <span class=\"title class_\">ProgramError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">from</span>(e: EscrowError) <span class=\"punctuation\">-&gt;</span> <span class=\"keyword\">Self</span> &#123;</span><br><span class=\"line\">        ProgramError::<span class=\"title function_ invoke__\">Custom</span>(e <span class=\"keyword\">as</span> <span class=\"type\">u32</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里使用<code>thiserror</code>的原因原文中写的很明确，省去我们手动实现相关<em>Trait</em>。</p></blockquote>\n<ul>\n<li>solana程序的返回值通常为<code>ProgramError</code>,所以我们在这里为<code>ProgramError</code>枚举中的所有类型实现<code>From</code>Trait转换为<code>EscrowError</code></li>\n</ul>\n<h3 id=\"instruction-rs\"><a href=\"#instruction-rs\" class=\"headerlink\" title=\"instruction.rs\"></a>instruction.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> std::convert::TryInto;</span><br><span class=\"line\"><span class=\"keyword\">use</span> crate::error::EscrowError::InvalidInstruction;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_program::program_error::ProgramError;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">EscrowInstruction</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/// 因为要在初始化里转移临时代币账号所有权，所以需要原owner签名，并且原owner也是初始化者</span></span><br><span class=\"line\">    <span class=\"comment\">/// 0. `[signer]` The account of the person initializing the escrow</span></span><br><span class=\"line\">    <span class=\"comment\">/// 1. `[writable]` Temporary token account that should be created prior to this instruction and owned by the initializer</span></span><br><span class=\"line\">    <span class=\"comment\">/// 2. `[]` The initializer&#x27;s token account for the token they will receive should the trade go through</span></span><br><span class=\"line\">    <span class=\"comment\">/// 3. `[writable]` The escrow account, it will hold all necessary info about the trade.</span></span><br><span class=\"line\">    <span class=\"comment\">/// 4. `[]` The rent sysvar</span></span><br><span class=\"line\">    <span class=\"comment\">/// 5. `[]` The token program</span></span><br><span class=\"line\">    InitEscrow &#123;</span><br><span class=\"line\">        <span class=\"comment\">/// The amount party A expects to receive of token Y</span></span><br><span class=\"line\">        amount: <span class=\"type\">u64</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">EscrowInstruction</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">unpack</span>(input: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;<span class=\"keyword\">Self</span>, ProgramError&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> (tag, rest) = input.<span class=\"title function_ invoke__\">split_first</span>().<span class=\"title function_ invoke__\">ok_or</span>(InvalidInstruction)?;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(<span class=\"keyword\">match</span> tag &#123;</span><br><span class=\"line\">            <span class=\"number\">0</span> =&gt; <span class=\"keyword\">Self</span>::InitEscrow &#123;</span><br><span class=\"line\">                amount: <span class=\"keyword\">Self</span>::<span class=\"title function_ invoke__\">unpack_amount</span>(rest)?,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">//注意这里的用法，InvalidInstruction转化为ProgramError时，使用了into</span></span><br><span class=\"line\">          \t<span class=\"comment\">//因为我们在error.rs中已经实现了那个from，系统会自动帮我们实现into</span></span><br><span class=\"line\">            _ =&gt; <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(InvalidInstruction.<span class=\"title function_ invoke__\">into</span>()),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//这里学习Input 转化为u64</span></span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">unpack_amount</span>(input: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;<span class=\"type\">u64</span>, ProgramError&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">amount</span> = input</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">get</span>(..<span class=\"number\">8</span>)</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">and_then</span>(|slice| slice.<span class=\"title function_ invoke__\">try_into</span>().<span class=\"title function_ invoke__\">ok</span>())</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">map</span>(<span class=\"type\">u64</span>::from_le_bytes)</span><br><span class=\"line\">            .<span class=\"title function_ invoke__\">ok_or</span>(InvalidInstruction)?;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(amount)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>在这段代码里准备一份初始化指令，编写<code>unpack</code>函数用来将输入数据解析为一个指令</p>\n</li>\n<li><p>后续添加新的指令继续在<code>unpack</code>函数中添加内容即可。注意函数返回类型<code>Result&lt;Self, ProgramError&gt;</code></p>\n</li>\n<li><p>由于input是<code>&amp;[u8]</code>类型，我们在初始化代币所有权中使用了<code>amount: u64</code>,所以我们需要编写一个类型转换，从input中切取代表<code>amount</code>的部分。</p>\n<ul>\n<li>整个过程的目的是尝试从 <code>input</code> 的前 8 个字节中读取一个 <code>u64</code> 值：<ol>\n<li><strong>获取前 8 个字节</strong>：通过 <code>input.get(..8)</code> 尝试获取切片的前 8 个字节。</li>\n<li><strong>转换切片到数组</strong>：使用 <code>.and_then</code> 和 <code>try_into()</code> 将字节切片转换为一个固定大小的字节数组 <code>[u8; 8]</code>。</li>\n<li>**转换字节数组到 <code>u64</code>**：使用 <code>map(u64::from_le_bytes)</code> 将 <code>[u8; 8]</code> 转换为 <code>u64</code>。</li>\n<li><strong>错误处理</strong>：如果任何一步失败，返回 <code>InvalidInstruction</code> 错误。</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"processor-rs\"><a href=\"#processor-rs\" class=\"headerlink\" title=\"processor.rs\"></a>processor.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> solana_program::&#123;</span><br><span class=\"line\">    account_info::&#123;next_account_info,AccountInfo&#125;,</span><br><span class=\"line\">    entrypoint::ProgramResult,</span><br><span class=\"line\">    program_error::ProgramError,</span><br><span class=\"line\">    msg,</span><br><span class=\"line\">    pubkey::Pubkey,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">use</span> crate::instruction::EscrowInstruction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">Processor</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">Processor</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">process</span>(program_id: &amp;Pubkey, accounts: &amp;[AccountInfo], instruction_data: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">instruction</span> = EscrowInstruction::<span class=\"title function_ invoke__\">unpack</span>(instruction_data)?;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">match</span> instruction &#123;</span><br><span class=\"line\">            EscrowInstruction::InitEscrow &#123;amount&#125; =&gt; &#123;</span><br><span class=\"line\">                msg!(<span class=\"string\">&quot;Instruction: InitEscrow&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">Self</span>::<span class=\"title function_ invoke__\">process_init_escrow</span>(accounts,amount,program_id)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">process_init_escrow</span>(</span><br><span class=\"line\">        accounts: &amp;[AccountInfo],</span><br><span class=\"line\">        amount: <span class=\"type\">u64</span>,</span><br><span class=\"line\">        program_id: &amp;Pubkey</span><br><span class=\"line\">    ) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">account_info_iter</span> = &amp;<span class=\"keyword\">mut</span> accounts.<span class=\"title function_ invoke__\">iter</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">initializer</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> !initializer.is_signer &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::MissingRequiredSignature);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// todo</span></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(())</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><ul>\n<li>这里一般为固定的<code>Processor</code>结构体（只是约定，无强制力）。在该结构体上创建一个静态函数<code>process</code>来处理入口转发过来的参数。在该函数内部，首先解析指令，然后根据指令调用相应的处理函数。<ul>\n<li><code>processor</code>返回的是<code>ProgramResult</code>。</li>\n<li>函数体中<code>?</code>操作符的使用，向上级调用传递错误。</li>\n</ul>\n</li>\n<li><code>process_init_escrow</code>并没有完全编写🤗后续会进行编写</li>\n</ul>\n</p>\n</div>\n<h3 id=\"entrypoint-rs\"><a href=\"#entrypoint-rs\" class=\"headerlink\" title=\"entrypoint.rs\"></a>entrypoint.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//! Program entrypoint</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> crate::&#123;processor::Processor&#125;;</span><br><span class=\"line\"><span class=\"keyword\">use</span> solana_program::&#123;</span><br><span class=\"line\">    account_info::AccountInfo, </span><br><span class=\"line\">    entrypoint, </span><br><span class=\"line\">    entrypoint::ProgramResult,</span><br><span class=\"line\">    pubkey::Pubkey,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">entrypoint!(process_instruction);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">process_instruction</span>(</span><br><span class=\"line\">    program_id: &amp;Pubkey,</span><br><span class=\"line\">    accounts: &amp;[AccountInfo],</span><br><span class=\"line\">    instruction_data: &amp;[<span class=\"type\">u8</span>],</span><br><span class=\"line\">) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">    Processor::<span class=\"title function_ invoke__\">process</span>(program_id, accounts, instruction_data) </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>这部分在<em>lib.rs</em>中声明<code>mod</code>的时候，需要设定可关闭<code>entrypoint</code>特性，为了程序可以方便的被其他程序导入（这里原文中也只是指出了方法，是参考spl-token中的设置和编写而来的）<a href=\"lib.rs%E4%B8%AD%E7%9A%84%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81%E4%BC%9A%E5%9C%A8%E5%90%8E%E9%9D%A2%E7%BB%9F%E4%B8%80%E5%B1%95%E7%A4%BA\">^2</a></p>\n</li>\n<li><p>这段代码是solana的入口点实现代码。负责接收和处理来自客户端的交易请求。入口点函数定义了如何处理指令数据、账户信息以及程序ID</p>\n</li>\n<li><p><code>entrypoint!</code> 是一个宏，用于定义Solana程序的入口点函数。在Solana中，每个程序必须有且只能有一个入口点函数。</p>\n<ul>\n<li><code>entrypoint!(process_instruction)</code> 告诉编译器，<code>process_instruction</code> 函数是该程序的入口点函数。Solana运行时会在每次程序被调用时执行这个函数。</li>\n</ul>\n</li>\n<li><p><code>fn process_instruction</code>:</p>\n<ul>\n<li><code>program_id: &amp;Pubkey</code>: 表示当前正在执行的程序的公钥。这是Solana用来验证这个程序的标识符。</li>\n<li><code>accounts: &amp;[AccountInfo]</code>: 一个账户信息的切片，包含了所有在这个交易中涉及的账户。每个 <code>AccountInfo</code> 包含关于账户的详细信息，例如公钥、余额、所有者和数据。</li>\n<li><code>instruction_data: &amp;[u8]</code>: 一个字节数组，包含了客户端传递给程序的指令数据。这个数据通常包含操作码和相关的参数，指示程序应该执行什么操作。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"state-rs\"><a href=\"#state-rs\" class=\"headerlink\" title=\"state.rs\"></a>state.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> solana_program::&#123;</span><br><span class=\"line\">    program_pack::&#123;IsInitialized, Pack, Sealed&#125;,</span><br><span class=\"line\">    program_error::ProgramError,</span><br><span class=\"line\">    pubkey::Pubkey,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">Escrow</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> is_initialized: <span class=\"type\">bool</span>,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> initializer_pubkey: Pubkey,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> temp_token_account_pubkey: Pubkey,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> initializer_token_to_receive_account_pubkey: Pubkey,</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> expected_amount: <span class=\"type\">u64</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">Sealed</span> <span class=\"keyword\">for</span> <span class=\"title class_\">Escrow</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">IsInitialized</span> <span class=\"keyword\">for</span> <span class=\"title class_\">Escrow</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">is_initialized</span>(&amp;<span class=\"keyword\">self</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.is_initialized</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> arrayref::&#123;array_mut_ref, array_ref, array_refs, mut_array_refs&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">Pack</span> <span class=\"keyword\">for</span> <span class=\"title class_\">Escrow</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> LEN: <span class=\"type\">usize</span> = <span class=\"number\">105</span>;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">unpack_from_slice</span>(src: &amp;[<span class=\"type\">u8</span>]) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;<span class=\"keyword\">Self</span>, ProgramError&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">src</span> = array_ref![src, <span class=\"number\">0</span>, Escrow::LEN];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> (</span><br><span class=\"line\">            is_initialized,</span><br><span class=\"line\">            initializer_pubkey,</span><br><span class=\"line\">            temp_token_account_pubkey,</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey,</span><br><span class=\"line\">            expected_amount,</span><br><span class=\"line\">        ) = array_refs![src, <span class=\"number\">1</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">is_initialized</span> = <span class=\"keyword\">match</span> is_initialized &#123;</span><br><span class=\"line\">            [<span class=\"number\">0</span>] =&gt; <span class=\"literal\">false</span>,</span><br><span class=\"line\">            [<span class=\"number\">1</span>] =&gt; <span class=\"literal\">true</span>,</span><br><span class=\"line\">            _ =&gt; <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::InvalidAccountData),</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Ok</span>(Escrow &#123;</span><br><span class=\"line\">            is_initialized,</span><br><span class=\"line\">            initializer_pubkey: Pubkey::<span class=\"title function_ invoke__\">new_from_array</span>(*initializer_pubkey),</span><br><span class=\"line\">            temp_token_account_pubkey: Pubkey::<span class=\"title function_ invoke__\">new_from_array</span>(*temp_token_account_pubkey),</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey: Pubkey::<span class=\"title function_ invoke__\">new_from_array</span>(*initializer_token_to_receive_account_pubkey),</span><br><span class=\"line\">            expected_amount: <span class=\"type\">u64</span>::<span class=\"title function_ invoke__\">from_le_bytes</span>(*expected_amount),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">pack_into_slice</span>(&amp;<span class=\"keyword\">self</span>, dst: &amp;<span class=\"keyword\">mut</span> [<span class=\"type\">u8</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">dst</span> = array_mut_ref![dst, <span class=\"number\">0</span>, Escrow::LEN];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> (</span><br><span class=\"line\">            is_initialized_dst,</span><br><span class=\"line\">            initializer_pubkey_dst,</span><br><span class=\"line\">            temp_token_account_pubkey_dst,</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey_dst,</span><br><span class=\"line\">            expected_amount_dst,</span><br><span class=\"line\">        ) = mut_array_refs![dst, <span class=\"number\">1</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">Escrow</span> &#123;</span><br><span class=\"line\">            is_initialized,</span><br><span class=\"line\">            initializer_pubkey,</span><br><span class=\"line\">            temp_token_account_pubkey,</span><br><span class=\"line\">            initializer_token_to_receive_account_pubkey,</span><br><span class=\"line\">            expected_amount,</span><br><span class=\"line\">        &#125; = <span class=\"keyword\">self</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        is_initialized_dst[<span class=\"number\">0</span>] = *is_initialized <span class=\"keyword\">as</span> <span class=\"type\">u8</span>;</span><br><span class=\"line\">        initializer_pubkey_dst.<span class=\"title function_ invoke__\">copy_from_slice</span>(initializer_pubkey.<span class=\"title function_ invoke__\">as_ref</span>());</span><br><span class=\"line\">        temp_token_account_pubkey_dst.<span class=\"title function_ invoke__\">copy_from_slice</span>(temp_token_account_pubkey.<span class=\"title function_ invoke__\">as_ref</span>());</span><br><span class=\"line\">        initializer_token_to_receive_account_pubkey_dst.<span class=\"title function_ invoke__\">copy_from_slice</span>(initializer_token_to_receive_account_pubkey.<span class=\"title function_ invoke__\">as_ref</span>());</span><br><span class=\"line\">        *expected_amount_dst = expected_amount.<span class=\"title function_ invoke__\">to_le_bytes</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<ul>\n<li>相同目录创建<code>state.rs</code>，文件用来定义状态保存对象并编写相应的程序处理序列化和反序列化<a href=\"%E5%9B%A0%E4%B8%BA%E6%95%B0%E6%8D%AE%E9%9C%80%E8%A6%81%E4%BB%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E8%B4%A6%E6%88%B7%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E6%A0%BC%E5%BC%8F%E4%B8%AD%E8%AF%BB%E5%8F%96%E5%92%8C%E5%86%99%E5%85%A5\">^3</a>（也就是将字节数组和数据结构相互转换）</li>\n<li>我们的结构需要实现<code>program_pack::&#123;IsInitialized, Pack, Sealed&#125; </code>这三个特型。</li>\n<li><code>const LEN: usize = 105;</code>这里结构的大小是根据各个字段的大小相加得到的，分别为<code>1 + 32*3 + 8 = 105</code>。</li>\n<li><code>unpack_from_slice</code>与<code>pack_into_slice</code>并不是直接被程序的其它部分调用的，Pack特型有两个默认函数，分别调用这两个函数。</li>\n<li>注意<code>array_mut_ref</code>, <code>array_ref</code>, <code>array_refs</code>, <code>mut_array_refs</code>这几个宏的用法，看名字就能猜到，分别为得到一个数组的可变引用，得到一个数组的引用 ，得到多个数组的引用，得到多个数组的可变引用。</li>\n<li>注意示例中从字节数组得到公钥的方法<code>copy_from_slice</code></li>\n<li>示例中从字节数组得到<code>u64</code>采用了<code>to_le_bytes</code>左对齐的方式，Rust中还有类似的右对齐方式。但一般Solana中采用类C的左对齐方式。</li>\n<li>布尔值可以直接转换为<code>u8</code>，见<code>is_initialized as u8</code>。</li>\n</ul>\n\n</div>\n<ul>\n<li><code>Pack</code>Trait<ul>\n<li><code>LEN</code>: 定义了<code>Escrow</code>结构体的字节大小（1 + 32 + 32 + 32 + 8 &#x3D; 105 字节）</li>\n</ul>\n</li>\n<li><code>unpack_from_slice</code>:<ul>\n<li>从字节切片中重建Escrow结构体（你可以理解为，通信时使用的是字节流，字节流需要重建为结构体才能被使用）</li>\n<li>使用<code>array_refs!</code>宏将源字节切片分割为五个部分，并且映射到<code>Escrow</code>结构体</li>\n<li>模式匹配转换<code>is_initialized</code></li>\n<li>其他字段均通过转换或者字节数组中构造得到</li>\n</ul>\n</li>\n<li><code>pack_into_slice</code>:<ul>\n<li>将<code>Escrow</code>结构体的内容打包回一个字节切片</li>\n<li>使用<code>mut_array_refs!</code>宏将目标切片分割为五个可变部分</li>\n<li>将结构体的字段转换为字节并复制到相应的切片部分</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"lib-rs\"><a href=\"#lib-rs\" class=\"headerlink\" title=\"lib.rs\"></a>lib.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#[cfg(not(feature = <span class=\"string\">&quot;no-entrypoint&quot;</span>))]</span></span><br><span class=\"line\"><span class=\"keyword\">mod</span> entrypoint;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> error;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> instruction;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> processor;</span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> state;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"完善-processor-rs\"><a href=\"#完善-processor-rs\" class=\"headerlink\" title=\"完善 processor.rs\"></a>完善 processor.rs</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">process_init_escrow</span>(accounts: &amp;[AccountInfo], amount: <span class=\"type\">u64</span>, program_id: &amp;Pubkey) <span class=\"punctuation\">-&gt;</span> ProgramResult &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">account_info_iter</span> = &amp;<span class=\"keyword\">mut</span> accounts.<span class=\"title function_ invoke__\">iter</span>();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">initializer</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> !initializer.is_signer &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::MissingRequiredSignature);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">temp_token_account</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">token_to_receive_account</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> *token_to_receive_account.owner != spl_token::<span class=\"title function_ invoke__\">id</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::IncorrectProgramId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">escrow_account</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">rent</span> = &amp;Rent::<span class=\"title function_ invoke__\">from_account_info</span>(<span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?)?;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> !rent.<span class=\"title function_ invoke__\">is_exempt</span>(escrow_account.<span class=\"title function_ invoke__\">lamports</span>(), escrow_account.<span class=\"title function_ invoke__\">data_len</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(EscrowError::NotRentExempt.<span class=\"title function_ invoke__\">into</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">escrow_info</span> = Escrow::<span class=\"title function_ invoke__\">unpack_unchecked</span>(&amp;escrow_account.data.<span class=\"title function_ invoke__\">borrow</span>())?;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> escrow_info.<span class=\"title function_ invoke__\">is_initialized</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">Err</span>(ProgramError::AccountAlreadyInitialized);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    escrow_info.is_initialized = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    escrow_info.initializer_pubkey = *initializer.key;</span><br><span class=\"line\">    escrow_info.temp_token_account_pubkey = *temp_token_account.key;</span><br><span class=\"line\">    escrow_info.initializer_token_to_receive_account_pubkey = *token_to_receive_account.key;</span><br><span class=\"line\">    escrow_info.expected_amount = amount;</span><br><span class=\"line\"></span><br><span class=\"line\">    Escrow::<span class=\"title function_ invoke__\">pack</span>(escrow_info, &amp;<span class=\"keyword\">mut</span> escrow_account.<span class=\"title function_ invoke__\">try_borrow_mut_data</span>()?)?;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> (pda, _bump_seed) = Pubkey::<span class=\"title function_ invoke__\">find_program_address</span>(&amp;[<span class=\"string\">b&quot;escrow&quot;</span>], program_id);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">token_program</span> = <span class=\"title function_ invoke__\">next_account_info</span>(account_info_iter)?;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">owner_change_ix</span> = spl_token::instruction::<span class=\"title function_ invoke__\">set_authority</span>(</span><br><span class=\"line\">        token_program.key,</span><br><span class=\"line\">        temp_token_account.key,</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">Some</span>(&amp;pda),</span><br><span class=\"line\">        spl_token::instruction::AuthorityType::AccountOwner,</span><br><span class=\"line\">        initializer.key,</span><br><span class=\"line\">        &amp;[]</span><br><span class=\"line\">    )?;</span><br><span class=\"line\"></span><br><span class=\"line\">    msg!(<span class=\"string\">&quot;Calling the token program to transfer token account ownership...&quot;</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">invoke</span>(</span><br><span class=\"line\">        &amp;owner_change_ix,</span><br><span class=\"line\">        &amp;[</span><br><span class=\"line\">            temp_token_account.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">            initializer.<span class=\"title function_ invoke__\">clone</span>(),</span><br><span class=\"line\">            token_program.<span class=\"title function_ invoke__\">clone</span>()</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    )?;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">Ok</span>(())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>修改<code>use crate::instruction::EscrowInstruction;</code>为<code>use crate::&#123;instruction::EscrowInstruction, error::EscrowError, state::Escrow&#125;;</code></p>\n</li>\n<li><div class=\"language-rust\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">rust</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> solana_program</span><span style=\"color: #89DDFF\">::&#123;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    account_info</span><span style=\"color: #89DDFF\">::&#123;</span><span style=\"color: #FFCB6B\">next_account_info</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\"> AccountInfo</span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    entrypoint</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #FFCB6B\">ProgramResult</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    program_error</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #FFCB6B\">ProgramError</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    msg</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    pubkey</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #FFCB6B\">Pubkey</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    program_pack</span><span style=\"color: #89DDFF\">::&#123;</span><span style=\"color: #FFCB6B\">Pack</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\"> IsInitialized</span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    sysvar</span><span style=\"color: #89DDFF\">::&#123;</span><span style=\"color: #FFCB6B\">rent</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #FFCB6B\">Rent</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFCB6B\"> Sysvar</span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">    program</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #FFCB6B\">invoke</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!--</span><span style=\"color: #BABED8\">code￼</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #89DDFF\">--&gt;</span></span></code></pre></div></li>\n</ol>\n<ul>\n<li><code>processor.rs</code>需要转代币账号所有权，调用<code>spl-token</code>的相关函数生成指令</li>\n<li>主要功能：<ol>\n<li>验证用于接收代币的账号是否存在</li>\n<li>验证交易账号是否免租金（注意了解相关概念）</li>\n<li>验证交易账号未初始化过（我还没理解，说法是只能初始化一次🤔留一个todo!()在这好了🤗）</li>\n<li>把交易账号的保存数据初始化写回区块链中（参见<code>Escrow::pack</code>函数）</li>\n<li>转让临时代币账号的所有权</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"本地编译部署\"><a href=\"#本地编译部署\" class=\"headerlink\" title=\"本地编译部署\"></a>本地编译部署</h2><div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><p><code>solana-install</code> 工具已被弃用，并将在 Solana 版本 1.18 不再支持后停止使用!</p>\n<ul>\n<li>如果你提前安装了，并且安装的时solana-install的更高版本，那么恭喜你！重装吧🤗反正我重装了，主要是后续使用<code>cargo-build-bpf</code>不能正常调取到命令😤，同时教程中使用了<code>cargo build-bpf</code>,很奇怪，我安装了但是跑不了这个命令，好像没有写入到cargo里面🤔也可能是windows的问题</li>\n<li>（再次吐槽windows的教程兼容性，真的烂，方便的还是转战moc OS或者Linux吧🤗🤗）</li>\n</ul>\n</p>\n</div>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>吐槽结束！接下来是正经教学</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>以下是参考的csdn：</p>\n<p>编译合约，打开终端切换到项目根目录，运行<code>cargo build-bpf --manifest-path=./Cargo.toml --bpf-out-dir=dist/program</code>并忽视那些警告（那是下一步使用的）。编译完成后会给出部署命令。</p>\n<p>启动本地节点。打开一个终端运行<code>solana-test-validator</code>启动本地节点。</p>\n<p>进行本地配置。另外打开一个终端，运行<code>solana config get</code>看是否指向了本地节点，如果不是，运行<code>solana config set --url http://localhost:8899 </code>进行设置。然后运行<code>solana balance</code>，你会发现你拥有 500000000 个SOL。-_- !!!</p>\n<p>运行编译时给出的部署命令:</p>\n<p><code>solana program deploy ..../escrow/target/deploy/escrow.so</code><br>1<br>最后得到一个程序ID，需要记下来，例如我们的为:<code>HEptwBGd4ShMYP6vNCE6vsDmuG3bGzQCcRPHfapvNeys</code></p></blockquote>\n<p>接下来，假如你是windows且在这部多次遇到困难，你可以看看我的解决方案：</p>\n<ul>\n<li><p>通过<a href=\"https://github.com/anza-xyz/agave\">agave</a>的relase下载<code>agave-install-init</code>[^4]，在cmd中运行：<code>agave-install-init-x86_64-pc-windows-msvc.exe v1.18.22</code> 如果安装没问题，你的<code>agave-install</code>和<code>cargo-build-bpf</code>都应该能正常运行？能找到命令就没问题然后你就能接着上面继续跟随操作了，记得用<code>cargo-build-bpf</code></p>\n</li>\n<li><p>如果报权限问题，就用管理员权限，我会在后续提供我的解决方案（使用bat脚本，这样你只要在你的编辑器自带terminal运行了，虽然会再开一个终端但是问题不大，大大简化操作了）</p>\n</li>\n<li><p>对了，<del>额外说一句，我没有看到500000000 个SOL</del>在我误打误撞尝试了<code>solana airdrop 2</code>和<code>solana airdrop 1000</code>以及<code> solana airdrop 1000 -k id.json</code>我的账户出现了500000000 SOL不知道怎么出现的，不过问题应该不大🤗</p>\n</li>\n<li><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">没有配置大概会变成这样</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> solana balance</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Error:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Dynamic</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">program</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">error:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">No</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">default</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">signer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">found,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">solana-keygen new -o C:\\Users\\Raphaeltop\\.config\\solana\\id.json</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">to</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">create</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">a</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">one</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!</span><span style=\"color: #FFCB6B\">--code￼12--&gt;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">1、创建Alice账号并领取空投SOL作为手续费</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">2、部署spl-token合约，这个已经默认包含在本地节点了,地址为:TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA。</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">3、部署spl-associated-token-account合约，默认已有，地址为:ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">4、发行X和Y两种代币。</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">5、创建Alice在X代币和Y代币的账号（主账号，这里使用唯一的代币关联地址）。</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">6、给Alice增发足够数量的X代币进行测试</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!</span><span style=\"color: #FFCB6B\">--code￼13--&gt;</span></span></code></pre></div></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Keypair</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Transaction</span>,</span><br><span class=\"line\">    <span class=\"variable constant_\">LAMPORTS_PER_SOL</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Connection</span>,</span><br><span class=\"line\">    sendAndConfirmTransaction</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@solana/web3.js&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Token</span>,<span class=\"variable constant_\">ASSOCIATED_TOKEN_PROGRAM_ID</span>,<span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@solana/spl-token&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rpcUrl = <span class=\"string\">&quot;http://localhost:8899 &quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> connection = <span class=\"keyword\">new</span> <span class=\"title class_\">Connection</span>(rpcUrl, <span class=\"string\">&#x27;confirmed&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> initSupplyTokenX = <span class=\"number\">100000000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">prepair</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建Alice账号领取空投</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> alice = <span class=\"title class_\">Keypair</span>.<span class=\"title function_\">generate</span>()</span><br><span class=\"line\">    signer = alice;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">showWallet</span>(alice))</span><br><span class=\"line\">    <span class=\"keyword\">let</span>  aliceAirdropSignature = <span class=\"keyword\">await</span> connection.<span class=\"title function_\">requestAirdrop</span>(</span><br><span class=\"line\">        alice.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        <span class=\"variable constant_\">LAMPORTS_PER_SOL</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">await</span> connection.<span class=\"title function_\">confirmTransaction</span>(aliceAirdropSignature);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> lamports = <span class=\"keyword\">await</span> connection.<span class=\"title function_\">getBalance</span>(alice.<span class=\"property\">publicKey</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Alice lamports:&quot;</span>,lamports)</span><br><span class=\"line\">    <span class=\"comment\">//发行代币X</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tokenX = <span class=\"keyword\">await</span> <span class=\"title class_\">Token</span>.<span class=\"title function_\">createMint</span>(</span><br><span class=\"line\">        connection,</span><br><span class=\"line\">        alice,</span><br><span class=\"line\">        alice.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"number\">9</span>,</span><br><span class=\"line\">        <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;tokenX:&quot;</span>,tokenX.<span class=\"property\">publicKey</span>.<span class=\"title function_\">toBase58</span>())</span><br><span class=\"line\">    <span class=\"comment\">//创建Alice的X代币关联账号并且增发代币</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> alice_x = <span class=\"keyword\">await</span> <span class=\"title function_\">createAssociatedAccout</span>(tokenX,alice.<span class=\"property\">publicKey</span>,alice,<span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> info = <span class=\"keyword\">await</span> tokenX.<span class=\"title function_\">getAccountInfo</span>(alice_x,<span class=\"string\">&quot;confirmed&quot;</span>)</span><br><span class=\"line\">    info.<span class=\"property\">owner</span> = info.<span class=\"property\">owner</span>.<span class=\"title function_\">toBase58</span>()</span><br><span class=\"line\">    info.<span class=\"property\">mint</span> = info.<span class=\"property\">mint</span>.<span class=\"title function_\">toBase58</span>()</span><br><span class=\"line\">    info.<span class=\"property\">address</span> = info.<span class=\"property\">address</span>.<span class=\"title function_\">toBase58</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;alice_x:&quot;</span>,info)</span><br><span class=\"line\">    <span class=\"comment\">//创建tokenY</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tokenY = <span class=\"keyword\">await</span> <span class=\"title class_\">Token</span>.<span class=\"title function_\">createMint</span>(</span><br><span class=\"line\">        connection,</span><br><span class=\"line\">        alice,</span><br><span class=\"line\">        alice.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"number\">9</span>,</span><br><span class=\"line\">        <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;tokenY:&quot;</span>,tokenY.<span class=\"property\">publicKey</span>.<span class=\"title function_\">toBase58</span>())</span><br><span class=\"line\">    <span class=\"comment\">//创建alice在tokenY的关联账号</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> alice_y = <span class=\"keyword\">await</span> <span class=\"title function_\">createAssociatedAccout</span>(tokenY,alice.<span class=\"property\">publicKey</span>,alice,<span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;alice_y_publicKey:&quot;</span>,alice_y.<span class=\"title function_\">toBase58</span>())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建关联地址并增发代币</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">createAssociatedAccout</span>(<span class=\"params\">tokenObj,owner,signer,isMint</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//第一步，计算关联地址</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> associatedAddress = <span class=\"keyword\">await</span> <span class=\"title function_\">getAssociatedTokenAddress</span>(</span><br><span class=\"line\">        <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>,</span><br><span class=\"line\">        tokenObj.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        owner</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\">//第二步 创建关联账号（此时ASSOCIATED_TOKEN_PROGRAM会自动进行初始化）</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> transaction = <span class=\"keyword\">new</span> <span class=\"title class_\">Transaction</span>()</span><br><span class=\"line\">    transaction.<span class=\"title function_\">add</span>(</span><br><span class=\"line\">        <span class=\"title class_\">Token</span>.<span class=\"title function_\">createAssociatedTokenAccountInstruction</span>(</span><br><span class=\"line\">          <span class=\"variable constant_\">ASSOCIATED_TOKEN_PROGRAM_ID</span>,</span><br><span class=\"line\">          <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>,</span><br><span class=\"line\">          tokenObj.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">          associatedAddress,</span><br><span class=\"line\">          owner,</span><br><span class=\"line\">          signer.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        )</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"comment\">// 第三步 增发代币</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isMint) &#123;</span><br><span class=\"line\">        transaction.<span class=\"title function_\">add</span>(</span><br><span class=\"line\">            <span class=\"title class_\">Token</span>.<span class=\"title function_\">createMintToInstruction</span>(</span><br><span class=\"line\">              <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>,</span><br><span class=\"line\">              tokenObj.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">              associatedAddress,  <span class=\"comment\">//注意这里是给关联地址增发</span></span><br><span class=\"line\">              owner,</span><br><span class=\"line\">              [],</span><br><span class=\"line\">              initSupplyTokenX,</span><br><span class=\"line\">            )</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 第四步 发送交易</span></span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">sendAndConfirmTransaction</span>(</span><br><span class=\"line\">        connection,</span><br><span class=\"line\">        transaction,</span><br><span class=\"line\">        [signer]</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> associatedAddress</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getAssociatedTokenAddress</span>(<span class=\"params\">programId,mint,account</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newAccount = <span class=\"keyword\">await</span> <span class=\"title class_\">Token</span>.<span class=\"title function_\">getAssociatedTokenAddress</span>(</span><br><span class=\"line\">        <span class=\"variable constant_\">ASSOCIATED_TOKEN_PROGRAM_ID</span>, <span class=\"comment\">//关联地址固定公钥</span></span><br><span class=\"line\">        programId,      <span class=\"comment\">// 代币合约公钥</span></span><br><span class=\"line\">        mint,            <span class=\"comment\">//mint(代币)标识/公钥</span></span><br><span class=\"line\">        account,            <span class=\"comment\">//玩家主账号 公钥</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newAccount</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">showWallet</span>(<span class=\"params\">wallet</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [wallet.<span class=\"property\">publicKey</span>.<span class=\"title function_\">toBase58</span>(),<span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(wallet.<span class=\"property\">secretKey</span>).<span class=\"title function_\">toString</span>(<span class=\"string\">&quot;hex&quot;</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">prepair</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;over&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>主要功能：</p>\n<ul>\n<li>创建一个新账户<code>alice</code>并获取<code>airdrop</code></li>\n<li>创建和管理代币（tokens）</li>\n<li>创建关联的代币账户（Associated token accounts）</li>\n<li>增发代币（mint tokens）</li>\n</ul>\n</li>\n<li><p>导入模块部分：（虽然这部分不是很重要，但是题主还不熟悉，所以为了方便回顾还是罗列了😎）</p>\n<ul>\n<li><strong><code>Keypair</code></strong>: 用于生成新的公私钥对，代表 Solana 中的一个账户。</li>\n<li><strong><code>Transaction</code></strong>: 表示一次交易，允许你在区块链上组合多个指令一起执行。</li>\n<li><strong><code>LAMPORTS_PER_SOL</code></strong>: Solana 上 1 SOL 的单位等于 10亿 Lamports。</li>\n<li><strong><code>Connection</code></strong>: 用于连接到 Solana 区块链网络的客户端。</li>\n<li><strong><code>sendAndConfirmTransaction</code></strong>: 发送并确认交易。</li>\n<li><strong><code>Token</code></strong>: 提供 SPL 代币（Solana 上的代币标准）的相关操作方法。</li>\n<li><strong><code>ASSOCIATED_TOKEN_PROGRAM_ID</code> 和 <code>TOKEN_PROGRAM_ID</code></strong>: 是与代币账户操作相关的 Solana 程序的标识符</li>\n</ul>\n</li>\n<li><p>创建链接和初始供应量：</p>\n<ul>\n<li><strong><code>rpcUrl</code></strong>: 指定连接到本地运行的 Solana 节点的 RPC URL。</li>\n<li><strong><code>connection</code></strong>: 与 Solana 区块链的连接对象。</li>\n<li><strong><code>initSupplyTokenX</code></strong>: 初始供应量，表示 TokenX 发行的初始数量。</li>\n</ul>\n</li>\n<li><p><code>prepair</code> 函数<br>主函数，执行代币创建和账户管理操作</p>\n</li>\n<li><p><strong>创建 Alice 账号</strong>:</p>\n<ul>\n<li><code>Keypair.generate()</code> 创建一个新的密钥对（即 Alice 的账户）。</li>\n<li>请求空投（Airdrop）1 SOL 给 Alice 的账户，并确认这笔交易。</li>\n</ul>\n</li>\n<li><p>**发行代币<code>TokenX</code>**：</p>\n<ul>\n<li><strong><code>Token.createMint</code></strong>: 创建一个新的代币（TokenX）。<ul>\n<li><strong><code>connection</code></strong>: 用于链上操作的连接对象。</li>\n<li><strong><code>alice</code></strong>: 代币创建者的 Keypair（即 Alice）。</li>\n<li><strong><code>alice.publicKey</code></strong>: 代币的初始授权者。</li>\n<li><strong><code>null</code></strong>: 表示代币不允许冻结账户。</li>\n<li><strong><code>9</code></strong>: 代币的小数位数（表示代币的精度，和 SOL 一样有9个小数位）。</li>\n<li><strong><code>TOKEN_PROGRAM_ID</code></strong>: 代币程序的标识符。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>创建Alice的代币X关联账户并增发代币</strong></p>\n<ul>\n<li><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #BABED8\"> alice_x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">await</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">createAssociatedAccout</span><span style=\"color: #BABED8\">(tokenX</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">alice</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">alice</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!--</span><span style=\"color: #BABED8\">code￼</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #89DDFF\">--&gt;</span></span></code></pre></div></li>\n</ul>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li><h3 id=\"关键点总结\"><a href=\"#关键点总结\" class=\"headerlink\" title=\"关键点总结\"></a>关键点总结</h3><ul>\n<li><strong>Alice账户</strong>：作为个人账户，它持有SOL和代币铸造权限，控制TokenX和TokenY的增发。</li>\n<li><strong>TokenX和TokenY代币</strong>：由Alice账户铸造，可以在相关的关联账户中持有。</li>\n<li><strong>关联账户（ATA）</strong>：专门用于持有某种特定代币（如TokenX或TokenY）的账户，由其关联的用户账户（Alice账户）控制。</li>\n<li><strong>代币与关联账户的关系</strong>：每个关联账户（ATA）只能持有一种特定的代币，与创建该关联账户的主账户（如Alice）有直接的关联关系。</li>\n</ul>\n</li>\n<li><p>让Alice账户可以管理多个代币，并使用相关的关联账户来分别持有和操作这些代币</p>\n</li>\n</ul></blockquote>\n<p>::: warning</p>\n<p>注意，大概率是版本更新的问题，这份代码已经跑不了了🤗博主已经各位尝试了，花了很多的时间，结论是跑不了。这边准备换去调框架了，但是还是会把后续看完的，基础还是要看看的📖</p>\n<p>:::</p>\n<h3 id=\"测试托管合约初始化\"><a href=\"#测试托管合约初始化\" class=\"headerlink\" title=\"测试托管合约初始化\"></a>测试托管合约初始化</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1、创建一个被token合约拥有的空的账号<br>2、将这个空的账号初始化为Alice的X代币账号（临时账号）<br>3、Alice将她的代币X从主账号转移到临时账号<br>4、创建一个被托管合约拥有的空账号<br>5、将这个空账号初始化为交易状态账号并且将Alice的临时X代币账号转移到PDA（程序派生账号）。</p></blockquote>\n<p>注意，合约部署时的地址其实在编译后是可以拿到的，使用<code>solana address -k .../....so</code>就可以获取了</p>\n<p>在<code>/test/</code>目录下建立<code>init.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Keypair</span>,</span><br><span class=\"line\">    <span class=\"title class_\">PublicKey</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Transaction</span>,</span><br><span class=\"line\">    <span class=\"title class_\">TransactionInstruction</span>,</span><br><span class=\"line\">    <span class=\"title class_\">SystemProgram</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Connection</span>,</span><br><span class=\"line\">    <span class=\"variable constant_\">SYSVAR_RENT_PUBKEY</span>,</span><br><span class=\"line\">    sendAndConfirmTransaction</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@solana/web3.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Token</span>,<span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@solana/spl-token&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">BufferLayout</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;buffer-layout&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">BN</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;bn.js&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rpcUrl = <span class=\"string\">&quot;http://localhost:8899 &quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> connection = <span class=\"keyword\">new</span> <span class=\"title class_\">Connection</span>(rpcUrl, <span class=\"string\">&#x27;confirmed&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//我们的托管程序地址</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> escrowProgramId = <span class=\"keyword\">new</span> <span class=\"title class_\">PublicKey</span>(<span class=\"string\">&quot;HEptwBGd4ShMYP6vNCE6vsDmuG3bGzQCcRPHfapvNeys&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">//从私钥中恢复alice的钱包</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> alice_privateKey = <span class=\"string\">&quot;49372f691baa9cb4f6d5f485e43b685adb26055cdc545728bd2ff808d0bf92ea870d687c5de0f7eac13cd6050b1c78e23345575ca4b2fc241d65705983015eb1&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> alice = <span class=\"title class_\">Keypair</span>.<span class=\"title function_\">fromSecretKey</span>(<span class=\"title class_\">Uint8Array</span>.<span class=\"title function_\">from</span>(<span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(alice_privateKey, <span class=\"string\">&#x27;hex&#x27;</span>)))</span><br><span class=\"line\"><span class=\"comment\">//从代币X地址中恢复代币X对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> token_x = <span class=\"keyword\">new</span> <span class=\"title class_\">PublicKey</span>(<span class=\"string\">&quot;FMYttGRGuYCrgqCRZLhLoUESqo9Sfe87DKdH7JLZGB6G&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> tokenX = <span class=\"keyword\">new</span> <span class=\"title class_\">Token</span>(connection,token_x,<span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>,alice)</span><br><span class=\"line\"><span class=\"comment\">//Alice在代币X的关联账号（公钥）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> alice_x = <span class=\"keyword\">new</span> <span class=\"title class_\">PublicKey</span>(<span class=\"string\">&quot;6fBN3uzsDKfG2nDLnpP4NknMocQX85AB1vqCWfXbW9os&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> alice_y = <span class=\"string\">&quot;Bu8Heft6Lsih32Z6yaVFQqVndDtzAmJdMS8friSLb59w&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">publicKey</span> = (<span class=\"params\">property</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">BufferLayout</span>.<span class=\"title function_\">blob</span>(<span class=\"number\">32</span>, property);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">uint64</span> = (<span class=\"params\">property</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">BufferLayout</span>.<span class=\"title function_\">blob</span>(<span class=\"number\">8</span>, property);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">ESCROW_ACCOUNT_DATA_LAYOUT</span> = <span class=\"title class_\">BufferLayout</span>.<span class=\"title function_\">struct</span>([</span><br><span class=\"line\">    <span class=\"title class_\">BufferLayout</span>.<span class=\"title function_\">u8</span>(<span class=\"string\">&quot;isInitialized&quot;</span>),</span><br><span class=\"line\">    <span class=\"title function_\">publicKey</span>(<span class=\"string\">&quot;initializerPubkey&quot;</span>),</span><br><span class=\"line\">    <span class=\"title function_\">publicKey</span>(<span class=\"string\">&quot;initializerTempTokenAccountPubkey&quot;</span>),</span><br><span class=\"line\">    <span class=\"title function_\">publicKey</span>(<span class=\"string\">&quot;initializerReceivingTokenAccountPubkey&quot;</span>),</span><br><span class=\"line\">    <span class=\"title function_\">uint64</span>(<span class=\"string\">&quot;expectedAmount&quot;</span>),</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">SWAP_AMOUNT</span> = <span class=\"number\">1000</span>;    <span class=\"comment\">//计划交易的X数量</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> expectedAmount = <span class=\"number\">1200</span>; <span class=\"comment\">//期望得到的Y数量</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Escrow</span>_Size = <span class=\"variable constant_\">ESCROW_ACCOUNT_DATA_LAYOUT</span>.<span class=\"property\">span</span>; <span class=\"comment\">//105，托管合约中交易账号数据大小，其实我们在合约state.rs中已经知道大小了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建Alice在X代币的临时账号,这里使用SDK自动帮我们创建了。</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp_account = <span class=\"keyword\">await</span> tokenX.<span class=\"title function_\">createAccount</span>(alice.<span class=\"property\">publicKey</span>)</span><br><span class=\"line\">    <span class=\"comment\">//转移X代币指令</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> transaction = <span class=\"keyword\">new</span> <span class=\"title class_\">Transaction</span>().<span class=\"title function_\">add</span>(</span><br><span class=\"line\">        <span class=\"title class_\">Token</span>.<span class=\"title function_\">createTransferInstruction</span>(</span><br><span class=\"line\">          <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>,</span><br><span class=\"line\">          alice_x,</span><br><span class=\"line\">          temp_account,</span><br><span class=\"line\">          alice.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">          [],</span><br><span class=\"line\">          <span class=\"variable constant_\">SWAP_AMOUNT</span>,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> escrowAccount = <span class=\"title class_\">Keypair</span>.<span class=\"title function_\">generate</span>() <span class=\"comment\">//产生一个随机公/私钥对</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;escrowAccount:&quot;</span>,escrowAccount.<span class=\"property\">publicKey</span>.<span class=\"title function_\">toBase58</span>())</span><br><span class=\"line\">    <span class=\"comment\">//创建托管账号指令</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> createEscrowAccountIx = <span class=\"title class_\">SystemProgram</span>.<span class=\"title function_\">createAccount</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">space</span>: <span class=\"title class_\">Escrow</span>_Size,</span><br><span class=\"line\">        <span class=\"attr\">lamports</span>: <span class=\"keyword\">await</span> connection.<span class=\"title function_\">getMinimumBalanceForRentExemption</span>(<span class=\"title class_\">Escrow</span>_Size, <span class=\"string\">&#x27;confirmed&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">fromPubkey</span>: alice.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        <span class=\"attr\">newAccountPubkey</span>: escrowAccount.<span class=\"property\">publicKey</span>,</span><br><span class=\"line\">        <span class=\"attr\">programId</span>: escrowProgramId</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    transaction.<span class=\"title function_\">add</span>(createEscrowAccountIx)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//初始化托管账号指令</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> initEscrowIx = <span class=\"keyword\">new</span> <span class=\"title class_\">TransactionInstruction</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">programId</span>: escrowProgramId,</span><br><span class=\"line\">        <span class=\"attr\">keys</span>: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">pubkey</span>: alice.<span class=\"property\">publicKey</span>, <span class=\"attr\">isSigner</span>: <span class=\"literal\">true</span>, <span class=\"attr\">isWritable</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">pubkey</span>: temp_account, <span class=\"attr\">isSigner</span>: <span class=\"literal\">false</span>, <span class=\"attr\">isWritable</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">pubkey</span>: alice_y, <span class=\"attr\">isSigner</span>: <span class=\"literal\">false</span>, <span class=\"attr\">isWritable</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">pubkey</span>: escrowAccount.<span class=\"property\">publicKey</span>, <span class=\"attr\">isSigner</span>: <span class=\"literal\">false</span>, <span class=\"attr\">isWritable</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">pubkey</span>: <span class=\"variable constant_\">SYSVAR_RENT_PUBKEY</span>, <span class=\"attr\">isSigner</span>: <span class=\"literal\">false</span>, <span class=\"attr\">isWritable</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">pubkey</span>: <span class=\"variable constant_\">TOKEN_PROGRAM_ID</span>, <span class=\"attr\">isSigner</span>: <span class=\"literal\">false</span>, <span class=\"attr\">isWritable</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">data</span>: <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(<span class=\"title class_\">Uint8Array</span>.<span class=\"title function_\">of</span>(<span class=\"number\">0</span>, ...<span class=\"keyword\">new</span> <span class=\"title function_\">BN</span>(expectedAmount).<span class=\"title function_\">toArray</span>(<span class=\"string\">&quot;le&quot;</span>, <span class=\"number\">8</span>)))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    transaction.<span class=\"title function_\">add</span>(initEscrowIx)</span><br><span class=\"line\">    <span class=\"comment\">//发送交易</span></span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">sendAndConfirmTransaction</span>(</span><br><span class=\"line\">        connection,</span><br><span class=\"line\">        transaction,</span><br><span class=\"line\">        [alice,escrowAccount] <span class=\"comment\">//这里要创建escrowAccount，所以它必须签名</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">const</span> encodedEscrowState = (<span class=\"keyword\">await</span> connection.<span class=\"title function_\">getAccountInfo</span>(escrowAccount.<span class=\"property\">publicKey</span>,<span class=\"string\">&#x27;confirmed&#x27;</span>)).<span class=\"property\">data</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> decodedEscrowState = <span class=\"variable constant_\">ESCROW_ACCOUNT_DATA_LAYOUT</span>.<span class=\"title function_\">decode</span>(encodedEscrowState)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> info = &#123;</span><br><span class=\"line\">        <span class=\"attr\">isInitialized</span>:decodedEscrowState.<span class=\"property\">isInitialized</span> === <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">initializerPubkey</span>:<span class=\"keyword\">new</span> <span class=\"title class_\">PublicKey</span>(decodedEscrowState.<span class=\"property\">initializerPubkey</span>).<span class=\"title function_\">toBase58</span>(),</span><br><span class=\"line\">        <span class=\"attr\">initializerTempTokenAccountPubkey</span>:<span class=\"keyword\">new</span> <span class=\"title class_\">PublicKey</span>(decodedEscrowState.<span class=\"property\">initializerTempTokenAccountPubkey</span>).<span class=\"title function_\">toBase58</span>(),</span><br><span class=\"line\">        <span class=\"attr\">initializerReceivingTokenAccountPubkey</span>:<span class=\"keyword\">new</span> <span class=\"title class_\">PublicKey</span>(decodedEscrowState.<span class=\"property\">initializerReceivingTokenAccountPubkey</span>).<span class=\"title function_\">toBase58</span>(),</span><br><span class=\"line\">        <span class=\"attr\">expectedAmount</span>:<span class=\"keyword\">new</span> <span class=\"title function_\">BN</span>(decodedEscrowState.<span class=\"property\">expectedAmount</span>, <span class=\"number\">10</span>, <span class=\"string\">&quot;le&quot;</span>).<span class=\"title function_\">toNumber</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;EscrowState:&quot;</span>,info)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">init</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;over&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add buffer-layout</span><br><span class=\"line\">yarn add bn.js</span><br></pre></td></tr></table></figure>\n\n<p>后面没什么重要内容了⚙️请期待后续的新内容🤗</p>\n","feature":true,"text":"一个简单的学习记录，学习如何构建第一个Solana智能合约...","permalink":"/post/Solana-coding-learning","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"23 mins."},"categories":[{"name":"Rust","slug":"Rust","count":4,"path":"api/categories/Rust.json"},{"name":"区块链","slug":"Rust/区块链","count":2,"path":"api/categories/Rust/区块链.json"}],"tags":[{"name":"rust","slug":"rust","count":4,"path":"api/tags/rust.json"},{"name":"solana","slug":"solana","count":2,"path":"api/tags/solana.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87\"><span class=\"toc-text\">前期准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">项目创建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">编写基本框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Error-rs\"><span class=\"toc-text\">Error.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#instruction-rs\"><span class=\"toc-text\">instruction.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#processor-rs\"><span class=\"toc-text\">processor.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#entrypoint-rs\"><span class=\"toc-text\">entrypoint.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#state-rs\"><span class=\"toc-text\">state.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lib-rs\"><span class=\"toc-text\">lib.rs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E5%96%84-processor-rs\"><span class=\"toc-text\">完善 processor.rs</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">本地编译部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%94%AE%E7%82%B9%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">关键点总结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E6%89%98%E7%AE%A1%E5%90%88%E7%BA%A6%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">测试托管合约初始化</span></a></li></ol></li></ol>","author":{"name":"RaphaelNY","slug":"blog-author","avatar":"/img/avatar.png","link":"/","description":"好きなように、自分の願いに従って活動するプログラマー。<br>不定期に面白いものを更新します！","socials":{"github":"https://github.com/RaphaelNY","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fffffff.svg","link":"https://live.bilibili.com/25369205"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"tauri个人入门建议","uid":"3b9e33d00820bf2a8cfa74fde48d213b","slug":"tauri-start-tutorial","date":"2024-04-27T12:25:49.000Z","updated":"2024-05-03T09:00:31.233Z","comments":true,"path":"api/articles/tauri-start-tutorial.json","keywords":null,"cover":"/img/tauri-start-tutorial-cover.png","text":"一个简单的入门tauri，教你如何最快上手tauri+rust && 一些注意事项...","permalink":"/post/tauri-start-tutorial","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Rust","slug":"Rust","count":4,"path":"api/categories/Rust.json"},{"name":"tauri","slug":"Rust/tauri","count":2,"path":"api/categories/Rust/tauri.json"}],"tags":[{"name":"rust","slug":"rust","count":4,"path":"api/tags/rust.json"},{"name":"tauri","slug":"tauri","count":2,"path":"api/tags/tauri.json"}],"author":{"name":"RaphaelNY","slug":"blog-author","avatar":"/img/avatar.png","link":"/","description":"好きなように、自分の願いに従って活動するプログラマー。<br>不定期に面白いものを更新します！","socials":{"github":"https://github.com/RaphaelNY","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fffffff.svg","link":"https://live.bilibili.com/25369205"}}}},"feature":true}}